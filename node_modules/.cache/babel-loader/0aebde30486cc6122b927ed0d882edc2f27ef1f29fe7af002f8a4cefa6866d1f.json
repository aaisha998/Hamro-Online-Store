{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { toast } from \"react-toastify\";\n\n//interface\n// export interface SingleProduct {\n//   id: number;\n//   title: string;\n//   price: string;\n//   category: string;\n//   description: string;\n//   image: string;\n//   rating?: {\n//     rate: number;\n//     count: number;\n//   };\n// }\n\n//Api\n\n// export const GetAllProduct = (id?: number) => {\n//   return axios.get(\"https://fakestoreapi.com/products\").then((res) => res.data);\n// };\n\n// export const useAllProduct = (id?: number) => {\n//   toast.success(\"Failed to Product\");\n//   return useQuery<SingleProduct[]>(\n//     \"https://fakestoreapi.com/products\",\n//     () => GetAllProduct(id),\n//     {\n//       onError: (err: any) => {\n//         toast.error(\"Failed to fetch product(s)\");\n//       },\n//     }\n//   );\n// };\n// export const GetSingleProduct = (id?: number) => {\n//   const url = `https://fakestoreapi.com/products/${id}`;\n//   return axios.get(url).then((res) => res.data);\n// };\n\n// export const useSingleProduct = (id?: number) => {\n//   toast.success(\"Failed to Product\");\n//   return useQuery<SingleProduct>(\n//     `https://fakestoreapi.com/products/${id}`,\n//     () => GetSingleProduct(id),\n//     {\n//       onError: (err: any) => {\n//         toast.error(\"Failed to fetch product\");\n//       },\n//     }\n//   );\n// };\n\n//Api\n\nexport const GetAllCategories = () => {\n  return axios.get(\"https://fakestoreapi.com/products/categories\").then(res => res.data);\n};\n_c = GetAllCategories;\nexport const useAllCategories = () => {\n  _s();\n  toast.success(\"Failed to Fetch Category\");\n  return useQuery(\"https://fakestoreapi.com/products/categories\", () => GetAllCategories(), {\n    onError: err => {\n      toast.error(\"Failed to fetch Category\");\n    }\n  });\n};\n\n// export const GetSerchedCategory = (category?: string) => {\n//   return axios\n//     .get(`https://fakestoreapi.com/products/category/${category}`)\n//     .then((res) => res.data);\n// };\n\n// export const useSerchedCategory = (category?: string) => {\n//   toast.success(\"Failed to Product\");\n//   return useQuery<SingleProduct[]>(\n//     `https://fakestoreapi.com/products/category/${category}`,\n//     () => GetSerchedCategory(category),\n//     {\n//       onError: (err: any) => {\n//         toast.error(\"Failed to fetch Category\");\n//       },\n//     }\n//   );\n// };\n\n// //limited\n// export const GetLimitedProduct = () => {\n//   return axios\n//     .get(`https://fakestoreapi.com/products?limit=5`)\n//     .then((res) => res.data);\n// };\n\n// export const useLimitedProduct = () => {\n//   toast.success(\"Failed to Product\");\n//   return useQuery<SingleProduct[]>(\n//     `https://fakestoreapi.com/products?limit=5`,\n//     () => GetLimitedProduct(),\n//     {\n//       onError: (err: any) => {\n//         toast.error(\"Failed to fetch limited product)\");\n//       },\n//     }\n//   );\n// };\n_s(useAllCategories, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nvar _c;\n$RefreshReg$(_c, \"GetAllCategories\");","map":{"version":3,"names":["axios","useQuery","toast","GetAllCategories","get","then","res","data","_c","useAllCategories","_s","success","onError","err","error","$RefreshReg$"],"sources":["/home/aaisha/Aaisha/Hamro-Online-Store/src/components/GetApi.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { toast } from \"react-toastify\";\n\n//interface\n// export interface SingleProduct {\n//   id: number;\n//   title: string;\n//   price: string;\n//   category: string;\n//   description: string;\n//   image: string;\n//   rating?: {\n//     rate: number;\n//     count: number;\n//   };\n// }\n\n//Api\n\n// export const GetAllProduct = (id?: number) => {\n//   return axios.get(\"https://fakestoreapi.com/products\").then((res) => res.data);\n// };\n\n// export const useAllProduct = (id?: number) => {\n//   toast.success(\"Failed to Product\");\n//   return useQuery<SingleProduct[]>(\n//     \"https://fakestoreapi.com/products\",\n//     () => GetAllProduct(id),\n//     {\n//       onError: (err: any) => {\n//         toast.error(\"Failed to fetch product(s)\");\n//       },\n//     }\n//   );\n// };\n// export const GetSingleProduct = (id?: number) => {\n//   const url = `https://fakestoreapi.com/products/${id}`;\n//   return axios.get(url).then((res) => res.data);\n// };\n\n// export const useSingleProduct = (id?: number) => {\n//   toast.success(\"Failed to Product\");\n//   return useQuery<SingleProduct>(\n//     `https://fakestoreapi.com/products/${id}`,\n//     () => GetSingleProduct(id),\n//     {\n//       onError: (err: any) => {\n//         toast.error(\"Failed to fetch product\");\n//       },\n//     }\n//   );\n// };\n\n//Api\n\nexport const GetAllCategories = () => {\n  return axios\n    .get(\"https://fakestoreapi.com/products/categories\")\n    .then((res) => res.data);\n};\n\nexport const useAllCategories = () => {\n  toast.success(\"Failed to Fetch Category\");\n  return useQuery<String[]>(\n    \"https://fakestoreapi.com/products/categories\",\n    () => GetAllCategories(),\n    {\n      onError: (err: any) => {\n        toast.error(\"Failed to fetch Category\");\n      },\n    }\n  );\n};\n\n// export const GetSerchedCategory = (category?: string) => {\n//   return axios\n//     .get(`https://fakestoreapi.com/products/category/${category}`)\n//     .then((res) => res.data);\n// };\n\n// export const useSerchedCategory = (category?: string) => {\n//   toast.success(\"Failed to Product\");\n//   return useQuery<SingleProduct[]>(\n//     `https://fakestoreapi.com/products/category/${category}`,\n//     () => GetSerchedCategory(category),\n//     {\n//       onError: (err: any) => {\n//         toast.error(\"Failed to fetch Category\");\n//       },\n//     }\n//   );\n// };\n\n// //limited\n// export const GetLimitedProduct = () => {\n//   return axios\n//     .get(`https://fakestoreapi.com/products?limit=5`)\n//     .then((res) => res.data);\n// };\n\n// export const useLimitedProduct = () => {\n//   toast.success(\"Failed to Product\");\n//   return useQuery<SingleProduct[]>(\n//     `https://fakestoreapi.com/products?limit=5`,\n//     () => GetLimitedProduct(),\n//     {\n//       onError: (err: any) => {\n//         toast.error(\"Failed to fetch limited product)\");\n//       },\n//     }\n//   );\n// };\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EACpC,OAAOH,KAAK,CACTI,GAAG,CAAC,8CAA8C,CAAC,CACnDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC;AAC5B,CAAC;AAACC,EAAA,GAJWL,gBAAgB;AAM7B,OAAO,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpCR,KAAK,CAACS,OAAO,CAAC,0BAA0B,CAAC;EACzC,OAAOV,QAAQ,CACb,8CAA8C,EAC9C,MAAME,gBAAgB,CAAC,CAAC,EACxB;IACES,OAAO,EAAGC,GAAQ,IAAK;MACrBX,KAAK,CAACY,KAAK,CAAC,0BAA0B,CAAC;IACzC;EACF,CACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAJ,EAAA,CAlDaD,gBAAgB;EAAA,QAEpBR,QAAQ;AAAA;AAAA,IAAAO,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}